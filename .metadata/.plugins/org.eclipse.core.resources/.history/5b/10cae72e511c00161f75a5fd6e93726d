package lambdas;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Person {
	
	public enum Sex{
		
		MALE, FEMALE
		
	}
	
	
	String name;
	LocalDate birthday;
	Sex gender;
	String emailAddress;
	
	public int getAge(){
		return 0;
		
		
	}
	
	public void printPerson(){
		
	}
	
	public static void printPersonsOlderThan(List<Person> roster, int age){
		
		for(Person p: roster){
			
			if(p.getAge() >= age){
				
				p.printPerson();
				
			}
			
		}
		
	}
	
	public static void printPersonsWithinAgeRange(List<Person> roster , int low, int high){
		
		for(Person p : roster){
			
			if(low <= p.getAge() && high >= p.getAge()){
				
				p.printPerson();
			}
			
		}
		
		
	}
	
	public static void printPersons(List<Person> roster, CheckPerson tester){
		
		for(Person p : roster){
			if(tester.test(p)){
				p.printPerson();
			}
		}
		
	}
	
	interface CheckPerson{
		boolean test(Person p);
	}

	class CheckPersonEligibleForSelectiveService implements CheckPerson{
		
		public boolean test(Person p){
			
			return p.gender == Person.Sex.MALE && p.getAge() >= 18 && p.getAge() <= 25;
			
		}
		
		
	}

	
public static void main(String args[]){
	/* to use this CheckPersonEligibleForSelectiveService class
	 * we need to create instance of this class and need to pass it to the
	 * printPersons() method
	 *  
	 *  
	 */
	List<Person> roster  = new ArrayList<Person>();
	Person p = new Person();
	
	printPersons(roster, p.new CheckPersonEligibleForSelectiveService());

	
	/*
	 * another option is to create an anonymous clas
	 */
	
	printPersons(roster, new CheckPerson() {
		
		@Override
		public boolean test(Person p) {
			// TODO Auto-generated method stub
			return false;
		}
	});
	
	/*as anonymous class appears bulky
	 * lambda expressions can be used in place of it
	 */
	
	printPersons(roster, (Person p1)-> p.gender == Person.Sex.FEMALE
			&& p.getAge() >= 15 
			&& p.getAge() <= 25
			);
	/* Still here the CheckPerson interface is used in lambda expression
	 * But standard Java functional interface can be used to do this task
	 */
	
	
	
}

public String getName() {
	return name;
}

public void setName(String name) {
	this.name = name;
}

public LocalDate getBirthday() {
	return birthday;
}

public void setBirthday(LocalDate birthday) {
	this.birthday = birthday;
}

public Sex getGender() {
	return gender;
}

public void setGender(Sex gender) {
	this.gender = gender;
}

public String getEmailAddress() {
	return emailAddress;
}

public void setEmailAddress(String emailAddress) {
	this.emailAddress = emailAddress;
}
	
}
