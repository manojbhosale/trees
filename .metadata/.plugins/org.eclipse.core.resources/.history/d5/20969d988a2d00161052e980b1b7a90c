package lists;

public class SList {

	public class Node{
		private int item;
		private Node next;
		public Node(int i, Node n){
			item = i;
			next = n;
		}
		
		public Node(){
			
		}
	}
	
	private Node front;
	
	public SList(){
		front = new Node();
	}
	
	public SList(int i, Node n){
		front = new Node(i,n);
	}
	
	public SList(int i){
		front = new Node(i,null);
	}
	
	public boolean insertFront(int i){
		front.next = new Node(i,null);
		return true;
	}
	
	public boolean insertBack(int i){
		Node p = front;
		while(p.next != null){
			p = p.next;
		}
		p.next = new Node(i,null);
		return true;
	}
	
	public int get(int i){
		Node p = front;
		if(i == 0){
			return p.item;
		}
		int size = 0;
		while(size != i){
			p = p.next;
			size++;
		}
		return p.item;
	}
	
	public boolean removeFrontnode(int i){
		front = front.next;
		return true;
	}
	
	public Node getBacknode(){
		
		Node p = front;
		while(p.next != null){
			p = p.next;
		}
		
		
		
	}
	
	public boolean removeBacknode(int i){
		front = front.next;
		return true;
	}
	
	
}
